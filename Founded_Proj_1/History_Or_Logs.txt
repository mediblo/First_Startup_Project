## 230923-230925
회원가입, 로그인, 비밀번호 찾기를 제작
관련 소스파일
[ check_user, file_processing, input, make_pw, screen, select, standard_func, status_code ]

# 230926
페이지를 옮길 때 에는 F1 - F5를 사용하는게 적합하다고 보임
키보드 숫자로 key[0] 59 부터
_kbhit()를 사용하여 인터럽트 개념으로 가도 좋다고 생각함
  _kbhit() 처리함수 -> 내부 스위치 통하여 페이지 별 처리 함수 제작
한글 / 영어를 선택하여 인터페이스를 변경 가능하도록 추후 제작

void abc(Color_num a, Color_num b ) {
	Color_num t_color = a, bg_color = b;
}
했을 때 abc(black, white); 가 가능

size_t = 이론상 담을 수 있는 가장 큰 unsigned int
Ex) 32비트이면 32크기 64비트이면 64크기

# 230928
마이 페이지 초안 제작 [ my_page ]
인터럽트 기능 삭제
소스파일 이름 변경 : select -> first_title

# 230930
_getch()로 키입력을 받을 때 char로는 키보드 화살표가 두번 입력이 안됨.
다만 알 수 없는 에러가 있을 수 있으니 short또는 unsigned char로 변경하여 입력받을 것

# 231002
회원정보수정, 금액충전 함수 제작 완료
마이 페이지 언어 선택화 완료
회원탈퇴 초안 제작
회원탈퇴 제작 완료
타이틀 페이지 언어 선택화 완료 및 종료 버튼 제작

# 231003
판매자 구조체 초안 제작
프로그램 구조체 초안 제작

# 231004
언어 및 선택 출력 함수 제작.
비밀번호 찾기 언어 선택화 안되어 있음 - 해결

URLMON.h의 다운로드 함수의 callback 변수는 COM을 사용해야 하므로 C언어에서는 구동 불가
결론적으로 프로그래스 바의 실현을 불가능.

callback 함수를 이용하여 제작할 것
Ex) callback 사용 예제
typedef int (*Operation)(int, int); // 연산자
int OP(int a, int b, OP op) { return op(a,b); } // 계산
int OP (int a, int b, int (*func) (int, int)) // 위 함수와 같으나 한번에 받는 것
OP(5, 4, add) // 사용방식

URL 을 입력 받을 때 LPCWSTR 데이터 타입을 사용할 것
해당 타입은 유니코드 문자열임.
예제] LPCWSTR url = L"http://example.com/file.txt";
입력은 wchar_t을 사용
예제] wchar_t url[200];
fgetws(입력 받는 변수, 길이, stdin);

# 231007
PNS화

# 231009
판매자 초기 마이 페이지 함수 제작
유저 마이 페이지 로그아웃, 종료 추가
데이터 파일 폴더 제작

# 231010
데이터들을 DB 형식으로
  구조체 = 테이블
  ID 데이터 = 주 키
  외래 키 참조 형식으로 사용할 것

# 231012
프로그램 업로드 할 때 지원 언어를 먼저 물어보고
그에 따라 입력할 언어 활성화, 비활성화를 지원하여
글자색으로 구별할 것

# 231016
Program -> app 변경 바람
upload_app 함수 입력부분 초안 제작

# 231019
LPCWSTR은 const wchar_t이므로 간단하게 변경이 가능하나 Pointer이니 주의할 것
또한 const이므로 선언 이후 변경이 불가능함

# 231105
파일 저장 방식을 정적 배열에서 동적 할당 연결 리스트로 변경해야함
[ 귀찮아서 포기한 방식이였음 ㅜㅜ ]

# 231106
User 파일 저장/불러오기 동적할당 연결리스트로 변경

# 231107
씼빠 드디어 유저 연결 성공 존나 힘드네
자고 일어나서 판매자도 해라
+ 이중 포인터 사용, 간접 주소 지정 방식으로 불러오기 해결은 보았음
다만 이해는 못함 [10:40]
++ 드디어 이해했다 빡대가리 자식 [11:17]
이중포인터 쥑이네
§종료시 메모리 할당 해제 함수 제작하고 프로그램 시작에 메모리 누수에 관한 경고를 할 것
메모리 할당 해제 함수 제작 완
+++ 회원 탈퇴시 해당 회원만 존재하였다 하면 root를 NULL 하고 root를 저장하게 "해줘"

# 231108
위 root NULL 해결 완
다만 이럴 시 UID_count가 -1씩 되어 UID가 중복이 될 수 있으니
UID_max를 전역변수로 선언 및 proj_setting 구조체에 넣고 이것은 실제 UID를 담당하게 변경할 것
완

# 231109
프로그램 등록 절차 완

# 2311010
유저에게 프로그램을 보여주려면 어떻게 해야 하는가?
라이브러리 예상 UI
프로그램 수를 5개씩 보여주고 오른쪽 상단엔 검색[F8로 검색 버튼 활성화]
Y좌표는 3씩 늘리고
고정으로 처음좌표에 3*5에 뒤로 앞으로를 상황에 맞게 활성/비활성 하며 선택 가능하게 하기
오른쪽에는 프로그램 설명을 적기
다만 현재 프로그램 데이터를 가져오는 것에 애를 먹고 있는 상황 [ 01:28 ]
위에 문제 해결 및 유저 라이브러리 / 상점 페이지 제작중 [ 15:01 ]

# 231111
프로그램 가격이 정수가 아닌경우 재귀함수를 사용하여 다시 입력받게 함
+ 프로그램 설명문 박스가 갑자기 병신됨, 내일이든 알바 갔다오든 알아서 하셈 ㅃ
§ Y좌표가 아니라 X좌표를 변경하니까 그렇지 ㅄ

# 231112
상점 페이지 UI 측면 완성. 이제 엔터 부분은 일어나서 해라 [ 04:34 ]

MultiByteToWideChar = 기존 char는 멀티바이트로 ASCII만 지원
Wide Char는 UNICODE를 지원하므로 내부를 변형해주는 함수가 필요
그게 MBTWC
사용시 크기는 wchar_t가 더 크므로 최소 +1 해주는 것이 좋다

# 231113
그래서 이제 뭐함? [ 02:47 ]
다운로드 성공 끼얏호우 [ 03:11 ]
아니 싯팔 왜 포인터 저장을 못해 내 AID_D 어디갔어 ㅅㅂ

# 231114
방법은 두가지 있다
방법 1
	프로그램 보유에 한도를 둔다 [ 50개 정도 ]
	이 경우 배열을 사용한다.
방법 2
	동적할당 연결리스트를 그대로 이어간다.
	어떻게? AID_D에 UID를 추가하여 먼저 UID, AID, count를 넣고 저장
	다음 추가할 때 UID를 먼저 살피고 AID 중복 체크 후, 같은 UID에 마지막에 추가하는 방법
	다만 이 경우 연결리스트 A->B->C 라고 가정할 때 현재 B이면 A의 값도 있어야 함 [ 이전 데이터 ]
	그래야 B를 체크해서 UID가 다를 시 A에 넣을 수 있지.
	
일단 내일 교수님한테 여쭐까? [ 엄청 닦일듯 ] [ 02:14 ]
일단 방법 2를 트라이 해보고 안되면 우회해보자 [ 화이팅 ]
void insert_AID_D() 함수 일단 만들었으니 DELETE랑 이것저것 알아서 화이팅 [ 02:33 ]
라이브러리 페이지까지 만듬 수구바위 AID_D 해결도 함 수구바위

# 231115
유저 라이브러리 사실상 제작 완료
이제 유저 삭제시 AID_D도 다 삭제되게 만들 것 [ 03:32 ]
완료! 이제 유저 삭제시 가지고 있던 AID_D도 삭제가 됩니다.
마지막 테스트는 A1 -> B1 -> A2 -> B2 순으로 테스트해서
1. 정렬이 잘 되는지?
2. 삭제도 잘 되는지?

1의 경우는 성공
다만 2의 경우 root 노드의 첫 번째부터 지우면 에러가 걸ㄹ릴거 같은데 이제 머리가 안돌아가 ㅁㄴㅇㄹ
히히 2의 경우도 성공

////////질문사항/////////
판매자가 올린 프로그램의 수정이 필요한가? 몰라
판매자가 등록한 URL이 정상적인지 미리 확인해야 하는가?